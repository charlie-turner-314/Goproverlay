<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1146" onload="init(evt)" viewBox="0 0 1200 1146" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1146" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record --rate 250 -o flame.svg -- goproverlay --video /Users/charlieturner/Downloads/output.MP4 --fit satbike.fit --widget power --widget speed --widget gps --output ./Overlayed.mp4 --gpx /Users/charlieturner/Downloads/GX021750_1757722703417.gpx</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1135.00"> </text><svg id="frames" x="10" width="1180" total_samples="10040"><g><title>&lt;module&gt; (renderer.py:7) (11 samples, 0.11%)</title><rect x="0.0100%" y="260" width="0.1096%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="11"/><text x="0.2600%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.11%)</title><rect x="0.0100%" y="276" width="0.1096%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="11"/><text x="0.2600%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 0.11%)</title><rect x="0.0100%" y="292" width="0.1096%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="11"/><text x="0.2600%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 0.11%)</title><rect x="0.0100%" y="308" width="0.1096%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="11"/><text x="0.2600%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (11 samples, 0.11%)</title><rect x="0.0100%" y="324" width="0.1096%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="11"/><text x="0.2600%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.11%)</title><rect x="0.0100%" y="340" width="0.1096%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="11"/><text x="0.2600%" y="350.50"></text></g><g><title>&lt;module&gt; (moviepy/__init__.py:16) (11 samples, 0.11%)</title><rect x="0.1295%" y="356" width="0.1096%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="11"/><text x="0.3795%" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (11 samples, 0.11%)</title><rect x="0.1295%" y="372" width="0.1096%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="11"/><text x="0.3795%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.11%)</title><rect x="0.1295%" y="388" width="0.1096%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="11"/><text x="0.3795%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.11%)</title><rect x="0.1295%" y="404" width="0.1096%" height="15" fill="rgb(220,122,19)" fg:x="13" fg:w="11"/><text x="0.3795%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 0.11%)</title><rect x="0.1295%" y="420" width="0.1096%" height="15" fill="rgb(250,228,42)" fg:x="13" fg:w="11"/><text x="0.3795%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 0.11%)</title><rect x="0.1295%" y="436" width="0.1096%" height="15" fill="rgb(240,193,28)" fg:x="13" fg:w="11"/><text x="0.3795%" y="446.50"></text></g><g><title>&lt;module&gt; (IPython/__init__.py:53) (18 samples, 0.18%)</title><rect x="0.2490%" y="596" width="0.1793%" height="15" fill="rgb(216,20,37)" fg:x="25" fg:w="18"/><text x="0.4990%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 0.18%)</title><rect x="0.2490%" y="612" width="0.1793%" height="15" fill="rgb(206,188,39)" fg:x="25" fg:w="18"/><text x="0.4990%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 0.18%)</title><rect x="0.2490%" y="628" width="0.1793%" height="15" fill="rgb(217,207,13)" fg:x="25" fg:w="18"/><text x="0.4990%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 0.18%)</title><rect x="0.2490%" y="644" width="0.1793%" height="15" fill="rgb(231,73,38)" fg:x="25" fg:w="18"/><text x="0.4990%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 0.18%)</title><rect x="0.2490%" y="660" width="0.1793%" height="15" fill="rgb(225,20,46)" fg:x="25" fg:w="18"/><text x="0.4990%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.18%)</title><rect x="0.2490%" y="676" width="0.1793%" height="15" fill="rgb(210,31,41)" fg:x="25" fg:w="18"/><text x="0.4990%" y="686.50"></text></g><g><title>&lt;module&gt; (IPython/core/application.py:26) (12 samples, 0.12%)</title><rect x="0.3088%" y="692" width="0.1195%" height="15" fill="rgb(221,200,47)" fg:x="31" fg:w="12"/><text x="0.5588%" y="702.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (12 samples, 0.12%)</title><rect x="0.3088%" y="708" width="0.1195%" height="15" fill="rgb(226,26,5)" fg:x="31" fg:w="12"/><text x="0.5588%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.12%)</title><rect x="0.3088%" y="724" width="0.1195%" height="15" fill="rgb(249,33,26)" fg:x="31" fg:w="12"/><text x="0.5588%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (12 samples, 0.12%)</title><rect x="0.3088%" y="740" width="0.1195%" height="15" fill="rgb(235,183,28)" fg:x="31" fg:w="12"/><text x="0.5588%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (12 samples, 0.12%)</title><rect x="0.3088%" y="756" width="0.1195%" height="15" fill="rgb(221,5,38)" fg:x="31" fg:w="12"/><text x="0.5588%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (12 samples, 0.12%)</title><rect x="0.3088%" y="772" width="0.1195%" height="15" fill="rgb(247,18,42)" fg:x="31" fg:w="12"/><text x="0.5588%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (12 samples, 0.12%)</title><rect x="0.3088%" y="788" width="0.1195%" height="15" fill="rgb(241,131,45)" fg:x="31" fg:w="12"/><text x="0.5588%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.12%)</title><rect x="0.3088%" y="804" width="0.1195%" height="15" fill="rgb(249,31,29)" fg:x="31" fg:w="12"/><text x="0.5588%" y="814.50"></text></g><g><title>&lt;module&gt; (IPython/core/crashhandler.py:27) (12 samples, 0.12%)</title><rect x="0.3088%" y="820" width="0.1195%" height="15" fill="rgb(225,111,53)" fg:x="31" fg:w="12"/><text x="0.5588%" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (12 samples, 0.12%)</title><rect x="0.3088%" y="836" width="0.1195%" height="15" fill="rgb(238,160,17)" fg:x="31" fg:w="12"/><text x="0.5588%" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.12%)</title><rect x="0.3088%" y="852" width="0.1195%" height="15" fill="rgb(214,148,48)" fg:x="31" fg:w="12"/><text x="0.5588%" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (12 samples, 0.12%)</title><rect x="0.3088%" y="868" width="0.1195%" height="15" fill="rgb(232,36,49)" fg:x="31" fg:w="12"/><text x="0.5588%" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (12 samples, 0.12%)</title><rect x="0.3088%" y="884" width="0.1195%" height="15" fill="rgb(209,103,24)" fg:x="31" fg:w="12"/><text x="0.5588%" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (12 samples, 0.12%)</title><rect x="0.3088%" y="900" width="0.1195%" height="15" fill="rgb(229,88,8)" fg:x="31" fg:w="12"/><text x="0.5588%" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (12 samples, 0.12%)</title><rect x="0.3088%" y="916" width="0.1195%" height="15" fill="rgb(213,181,19)" fg:x="31" fg:w="12"/><text x="0.5588%" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.12%)</title><rect x="0.3088%" y="932" width="0.1195%" height="15" fill="rgb(254,191,54)" fg:x="31" fg:w="12"/><text x="0.5588%" y="942.50"></text></g><g><title>&lt;module&gt; (IPython/terminal/interactiveshell.py:31) (11 samples, 0.11%)</title><rect x="0.5279%" y="788" width="0.1096%" height="15" fill="rgb(241,83,37)" fg:x="53" fg:w="11"/><text x="0.7779%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.11%)</title><rect x="0.5279%" y="804" width="0.1096%" height="15" fill="rgb(233,36,39)" fg:x="53" fg:w="11"/><text x="0.7779%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (11 samples, 0.11%)</title><rect x="0.5279%" y="820" width="0.1096%" height="15" fill="rgb(226,3,54)" fg:x="53" fg:w="11"/><text x="0.7779%" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.11%)</title><rect x="0.5279%" y="836" width="0.1096%" height="15" fill="rgb(245,192,40)" fg:x="53" fg:w="11"/><text x="0.7779%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.11%)</title><rect x="0.5279%" y="852" width="0.1096%" height="15" fill="rgb(238,167,29)" fg:x="53" fg:w="11"/><text x="0.7779%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 0.11%)</title><rect x="0.5279%" y="868" width="0.1096%" height="15" fill="rgb(232,182,51)" fg:x="53" fg:w="11"/><text x="0.7779%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 0.11%)</title><rect x="0.5279%" y="884" width="0.1096%" height="15" fill="rgb(231,60,39)" fg:x="53" fg:w="11"/><text x="0.7779%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (11 samples, 0.11%)</title><rect x="0.5279%" y="900" width="0.1096%" height="15" fill="rgb(208,69,12)" fg:x="53" fg:w="11"/><text x="0.7779%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.11%)</title><rect x="0.5279%" y="916" width="0.1096%" height="15" fill="rgb(235,93,37)" fg:x="53" fg:w="11"/><text x="0.7779%" y="926.50"></text></g><g><title>&lt;module&gt; (prompt_toolkit/__init__.py:25) (11 samples, 0.11%)</title><rect x="0.5279%" y="932" width="0.1096%" height="15" fill="rgb(213,116,39)" fg:x="53" fg:w="11"/><text x="0.7779%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.11%)</title><rect x="0.5279%" y="948" width="0.1096%" height="15" fill="rgb(222,207,29)" fg:x="53" fg:w="11"/><text x="0.7779%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 0.11%)</title><rect x="0.5279%" y="964" width="0.1096%" height="15" fill="rgb(206,96,30)" fg:x="53" fg:w="11"/><text x="0.7779%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 0.11%)</title><rect x="0.5279%" y="980" width="0.1096%" height="15" fill="rgb(218,138,4)" fg:x="53" fg:w="11"/><text x="0.7779%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (11 samples, 0.11%)</title><rect x="0.5279%" y="996" width="0.1096%" height="15" fill="rgb(250,191,14)" fg:x="53" fg:w="11"/><text x="0.7779%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.11%)</title><rect x="0.5279%" y="1012" width="0.1096%" height="15" fill="rgb(239,60,40)" fg:x="53" fg:w="11"/><text x="0.7779%" y="1022.50"></text></g><g><title>&lt;module&gt; (prompt_toolkit/application/__init__.py:3) (11 samples, 0.11%)</title><rect x="0.5279%" y="1028" width="0.1096%" height="15" fill="rgb(206,27,48)" fg:x="53" fg:w="11"/><text x="0.7779%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.11%)</title><rect x="0.5279%" y="1044" width="0.1096%" height="15" fill="rgb(225,35,8)" fg:x="53" fg:w="11"/><text x="0.7779%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 0.11%)</title><rect x="0.5279%" y="1060" width="0.1096%" height="15" fill="rgb(250,213,24)" fg:x="53" fg:w="11"/><text x="0.7779%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 0.11%)</title><rect x="0.5279%" y="1076" width="0.1096%" height="15" fill="rgb(247,123,22)" fg:x="53" fg:w="11"/><text x="0.7779%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (11 samples, 0.11%)</title><rect x="0.5279%" y="1092" width="0.1096%" height="15" fill="rgb(231,138,38)" fg:x="53" fg:w="11"/><text x="0.7779%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.11%)</title><rect x="0.5279%" y="1108" width="0.1096%" height="15" fill="rgb(231,145,46)" fg:x="53" fg:w="11"/><text x="0.7779%" y="1118.50"></text></g><g><title>&lt;module&gt; (IPython/terminal/embed.py:16) (22 samples, 0.22%)</title><rect x="0.5279%" y="692" width="0.2191%" height="15" fill="rgb(251,118,11)" fg:x="53" fg:w="22"/><text x="0.7779%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (22 samples, 0.22%)</title><rect x="0.5279%" y="708" width="0.2191%" height="15" fill="rgb(217,147,25)" fg:x="53" fg:w="22"/><text x="0.7779%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (22 samples, 0.22%)</title><rect x="0.5279%" y="724" width="0.2191%" height="15" fill="rgb(247,81,37)" fg:x="53" fg:w="22"/><text x="0.7779%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (22 samples, 0.22%)</title><rect x="0.5279%" y="740" width="0.2191%" height="15" fill="rgb(209,12,38)" fg:x="53" fg:w="22"/><text x="0.7779%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (22 samples, 0.22%)</title><rect x="0.5279%" y="756" width="0.2191%" height="15" fill="rgb(227,1,9)" fg:x="53" fg:w="22"/><text x="0.7779%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (22 samples, 0.22%)</title><rect x="0.5279%" y="772" width="0.2191%" height="15" fill="rgb(248,47,43)" fg:x="53" fg:w="22"/><text x="0.7779%" y="782.50"></text></g><g><title>&lt;module&gt; (IPython/terminal/interactiveshell.py:48) (11 samples, 0.11%)</title><rect x="0.6375%" y="788" width="0.1096%" height="15" fill="rgb(221,10,30)" fg:x="64" fg:w="11"/><text x="0.8875%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (11 samples, 0.11%)</title><rect x="0.6375%" y="804" width="0.1096%" height="15" fill="rgb(210,229,1)" fg:x="64" fg:w="11"/><text x="0.8875%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (11 samples, 0.11%)</title><rect x="0.6375%" y="820" width="0.1096%" height="15" fill="rgb(222,148,37)" fg:x="64" fg:w="11"/><text x="0.8875%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (11 samples, 0.11%)</title><rect x="0.6375%" y="836" width="0.1096%" height="15" fill="rgb(234,67,33)" fg:x="64" fg:w="11"/><text x="0.8875%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (11 samples, 0.11%)</title><rect x="0.6375%" y="852" width="0.1096%" height="15" fill="rgb(247,98,35)" fg:x="64" fg:w="11"/><text x="0.8875%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.11%)</title><rect x="0.6375%" y="868" width="0.1096%" height="15" fill="rgb(247,138,52)" fg:x="64" fg:w="11"/><text x="0.8875%" y="878.50"></text></g><g><title>&lt;module&gt; (moviepy/__init__.py:23) (58 samples, 0.58%)</title><rect x="0.2390%" y="356" width="0.5777%" height="15" fill="rgb(213,79,30)" fg:x="24" fg:w="58"/><text x="0.4890%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (58 samples, 0.58%)</title><rect x="0.2390%" y="372" width="0.5777%" height="15" fill="rgb(246,177,23)" fg:x="24" fg:w="58"/><text x="0.4890%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (58 samples, 0.58%)</title><rect x="0.2390%" y="388" width="0.5777%" height="15" fill="rgb(230,62,27)" fg:x="24" fg:w="58"/><text x="0.4890%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (58 samples, 0.58%)</title><rect x="0.2390%" y="404" width="0.5777%" height="15" fill="rgb(216,154,8)" fg:x="24" fg:w="58"/><text x="0.4890%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (57 samples, 0.57%)</title><rect x="0.2490%" y="420" width="0.5677%" height="15" fill="rgb(244,35,45)" fg:x="25" fg:w="57"/><text x="0.4990%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (57 samples, 0.57%)</title><rect x="0.2490%" y="436" width="0.5677%" height="15" fill="rgb(251,115,12)" fg:x="25" fg:w="57"/><text x="0.4990%" y="446.50"></text></g><g><title>&lt;module&gt; (moviepy/video/io/display_in_notebook.py:22) (57 samples, 0.57%)</title><rect x="0.2490%" y="452" width="0.5677%" height="15" fill="rgb(240,54,50)" fg:x="25" fg:w="57"/><text x="0.4990%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (57 samples, 0.57%)</title><rect x="0.2490%" y="468" width="0.5677%" height="15" fill="rgb(233,84,52)" fg:x="25" fg:w="57"/><text x="0.4990%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (57 samples, 0.57%)</title><rect x="0.2490%" y="484" width="0.5677%" height="15" fill="rgb(207,117,47)" fg:x="25" fg:w="57"/><text x="0.4990%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (57 samples, 0.57%)</title><rect x="0.2490%" y="500" width="0.5677%" height="15" fill="rgb(249,43,39)" fg:x="25" fg:w="57"/><text x="0.4990%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (57 samples, 0.57%)</title><rect x="0.2490%" y="516" width="0.5677%" height="15" fill="rgb(209,38,44)" fg:x="25" fg:w="57"/><text x="0.4990%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (57 samples, 0.57%)</title><rect x="0.2490%" y="532" width="0.5677%" height="15" fill="rgb(236,212,23)" fg:x="25" fg:w="57"/><text x="0.4990%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (57 samples, 0.57%)</title><rect x="0.2490%" y="548" width="0.5677%" height="15" fill="rgb(242,79,21)" fg:x="25" fg:w="57"/><text x="0.4990%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (57 samples, 0.57%)</title><rect x="0.2490%" y="564" width="0.5677%" height="15" fill="rgb(211,96,35)" fg:x="25" fg:w="57"/><text x="0.4990%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (57 samples, 0.57%)</title><rect x="0.2490%" y="580" width="0.5677%" height="15" fill="rgb(253,215,40)" fg:x="25" fg:w="57"/><text x="0.4990%" y="590.50"></text></g><g><title>&lt;module&gt; (IPython/__init__.py:54) (39 samples, 0.39%)</title><rect x="0.4283%" y="596" width="0.3884%" height="15" fill="rgb(211,81,21)" fg:x="43" fg:w="39"/><text x="0.6783%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (39 samples, 0.39%)</title><rect x="0.4283%" y="612" width="0.3884%" height="15" fill="rgb(208,190,38)" fg:x="43" fg:w="39"/><text x="0.6783%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (39 samples, 0.39%)</title><rect x="0.4283%" y="628" width="0.3884%" height="15" fill="rgb(235,213,38)" fg:x="43" fg:w="39"/><text x="0.6783%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (39 samples, 0.39%)</title><rect x="0.4283%" y="644" width="0.3884%" height="15" fill="rgb(237,122,38)" fg:x="43" fg:w="39"/><text x="0.6783%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (39 samples, 0.39%)</title><rect x="0.4283%" y="660" width="0.3884%" height="15" fill="rgb(244,218,35)" fg:x="43" fg:w="39"/><text x="0.6783%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (39 samples, 0.39%)</title><rect x="0.4283%" y="676" width="0.3884%" height="15" fill="rgb(240,68,47)" fg:x="43" fg:w="39"/><text x="0.6783%" y="686.50"></text></g><g><title>&lt;module&gt; (goproverlay:5) (89 samples, 0.89%)</title><rect x="0.0000%" y="68" width="0.8865%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="89"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (89 samples, 0.89%)</title><rect x="0.0000%" y="84" width="0.8865%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="89"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (89 samples, 0.89%)</title><rect x="0.0000%" y="100" width="0.8865%" height="15" fill="rgb(224,169,11)" fg:x="0" fg:w="89"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (89 samples, 0.89%)</title><rect x="0.0000%" y="116" width="0.8865%" height="15" fill="rgb(250,166,2)" fg:x="0" fg:w="89"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (89 samples, 0.89%)</title><rect x="0.0000%" y="132" width="0.8865%" height="15" fill="rgb(242,216,29)" fg:x="0" fg:w="89"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (89 samples, 0.89%)</title><rect x="0.0000%" y="148" width="0.8865%" height="15" fill="rgb(230,116,27)" fg:x="0" fg:w="89"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (goproverlay/cli.py:13) (88 samples, 0.88%)</title><rect x="0.0100%" y="164" width="0.8765%" height="15" fill="rgb(228,99,48)" fg:x="1" fg:w="88"/><text x="0.2600%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (88 samples, 0.88%)</title><rect x="0.0100%" y="180" width="0.8765%" height="15" fill="rgb(253,11,6)" fg:x="1" fg:w="88"/><text x="0.2600%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (88 samples, 0.88%)</title><rect x="0.0100%" y="196" width="0.8765%" height="15" fill="rgb(247,143,39)" fg:x="1" fg:w="88"/><text x="0.2600%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (88 samples, 0.88%)</title><rect x="0.0100%" y="212" width="0.8765%" height="15" fill="rgb(236,97,10)" fg:x="1" fg:w="88"/><text x="0.2600%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (88 samples, 0.88%)</title><rect x="0.0100%" y="228" width="0.8765%" height="15" fill="rgb(233,208,19)" fg:x="1" fg:w="88"/><text x="0.2600%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (88 samples, 0.88%)</title><rect x="0.0100%" y="244" width="0.8765%" height="15" fill="rgb(216,164,2)" fg:x="1" fg:w="88"/><text x="0.2600%" y="254.50"></text></g><g><title>&lt;module&gt; (renderer.py:8) (77 samples, 0.77%)</title><rect x="0.1195%" y="260" width="0.7669%" height="15" fill="rgb(220,129,5)" fg:x="12" fg:w="77"/><text x="0.3695%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (77 samples, 0.77%)</title><rect x="0.1195%" y="276" width="0.7669%" height="15" fill="rgb(242,17,10)" fg:x="12" fg:w="77"/><text x="0.3695%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (77 samples, 0.77%)</title><rect x="0.1195%" y="292" width="0.7669%" height="15" fill="rgb(242,107,0)" fg:x="12" fg:w="77"/><text x="0.3695%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (77 samples, 0.77%)</title><rect x="0.1195%" y="308" width="0.7669%" height="15" fill="rgb(251,28,31)" fg:x="12" fg:w="77"/><text x="0.3695%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (77 samples, 0.77%)</title><rect x="0.1195%" y="324" width="0.7669%" height="15" fill="rgb(233,223,10)" fg:x="12" fg:w="77"/><text x="0.3695%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (77 samples, 0.77%)</title><rect x="0.1195%" y="340" width="0.7669%" height="15" fill="rgb(215,21,27)" fg:x="12" fg:w="77"/><text x="0.3695%" y="350.50"></text></g><g><title>_read_data_message (fitdecode/reader.py:733) (13 samples, 0.13%)</title><rect x="1.1056%" y="292" width="0.1295%" height="15" fill="rgb(232,23,21)" fg:x="111" fg:w="13"/><text x="1.3556%" y="302.50"></text></g><g><title>_read_record (fitdecode/reader.py:530) (50 samples, 0.50%)</title><rect x="0.9363%" y="276" width="0.4980%" height="15" fill="rgb(244,5,23)" fg:x="94" fg:w="50"/><text x="1.1863%" y="286.50"></text></g><g><title>from_fit_file (fit_loader.py:41) (56 samples, 0.56%)</title><rect x="0.8865%" y="228" width="0.5578%" height="15" fill="rgb(226,81,46)" fg:x="89" fg:w="56"/><text x="1.1365%" y="238.50"></text></g><g><title>__iter__ (fitdecode/reader.py:232) (56 samples, 0.56%)</title><rect x="0.8865%" y="244" width="0.5578%" height="15" fill="rgb(247,70,30)" fg:x="89" fg:w="56"/><text x="1.1365%" y="254.50"></text></g><g><title>_read_next (fitdecode/reader.py:363) (55 samples, 0.55%)</title><rect x="0.8964%" y="260" width="0.5478%" height="15" fill="rgb(212,68,19)" fg:x="90" fg:w="55"/><text x="1.1464%" y="270.50"></text></g><g><title>render (goproverlay/cli.py:113) (78 samples, 0.78%)</title><rect x="0.8865%" y="212" width="0.7769%" height="15" fill="rgb(240,187,13)" fg:x="89" fg:w="78"/><text x="1.1365%" y="222.50"></text></g><g><title>__init__ (moviepy/video/io/VideoFileClip.py:109) (19 samples, 0.19%)</title><rect x="1.6633%" y="276" width="0.1892%" height="15" fill="rgb(223,113,26)" fg:x="167" fg:w="19"/><text x="1.9133%" y="286.50"></text></g><g><title>__init__ (moviepy/video/io/ffmpeg_reader.py:81) (19 samples, 0.19%)</title><rect x="1.6633%" y="292" width="0.1892%" height="15" fill="rgb(206,192,2)" fg:x="167" fg:w="19"/><text x="1.9133%" y="302.50"></text></g><g><title>initialize (moviepy/video/io/ffmpeg_reader.py:167) (19 samples, 0.19%)</title><rect x="1.6633%" y="308" width="0.1892%" height="15" fill="rgb(241,108,4)" fg:x="167" fg:w="19"/><text x="1.9133%" y="318.50"></text></g><g><title>read_frame (moviepy/video/io/ffmpeg_reader.py:187) (19 samples, 0.19%)</title><rect x="1.6633%" y="324" width="0.1892%" height="15" fill="rgb(247,173,49)" fg:x="167" fg:w="19"/><text x="1.9133%" y="334.50"></text></g><g><title>render_to (renderer.py:202) (21 samples, 0.21%)</title><rect x="1.6633%" y="228" width="0.2092%" height="15" fill="rgb(224,114,35)" fg:x="167" fg:w="21"/><text x="1.9133%" y="238.50"></text></g><g><title>fun (decorator.py:232) (21 samples, 0.21%)</title><rect x="1.6633%" y="244" width="0.2092%" height="15" fill="rgb(245,159,27)" fg:x="167" fg:w="21"/><text x="1.9133%" y="254.50"></text></g><g><title>wrapper (moviepy/decorators.py:102) (21 samples, 0.21%)</title><rect x="1.6633%" y="260" width="0.2092%" height="15" fill="rgb(245,172,44)" fg:x="167" fg:w="21"/><text x="1.9133%" y="270.50"></text></g><g><title>draw_onto (base.py:30) (15 samples, 0.15%)</title><rect x="1.8924%" y="388" width="0.1494%" height="15" fill="rgb(236,23,11)" fg:x="190" fg:w="15"/><text x="2.1424%" y="398.50"></text></g><g><title>_frame_with_overlay (renderer.py:184) (16 samples, 0.16%)</title><rect x="1.8924%" y="372" width="0.1594%" height="15" fill="rgb(205,117,38)" fg:x="190" fg:w="16"/><text x="2.1424%" y="382.50"></text></g><g><title>render_to (renderer.py:203) (19 samples, 0.19%)</title><rect x="1.8725%" y="228" width="0.1892%" height="15" fill="rgb(237,72,25)" fg:x="188" fg:w="19"/><text x="2.1225%" y="238.50"></text></g><g><title>overlay_clip (renderer.py:199) (18 samples, 0.18%)</title><rect x="1.8825%" y="244" width="0.1793%" height="15" fill="rgb(244,70,9)" fg:x="189" fg:w="18"/><text x="2.1325%" y="254.50"></text></g><g><title>fun (decorator.py:232) (18 samples, 0.18%)</title><rect x="1.8825%" y="260" width="0.1793%" height="15" fill="rgb(217,125,39)" fg:x="189" fg:w="18"/><text x="2.1325%" y="270.50"></text></g><g><title>outplace (moviepy/decorators.py:15) (18 samples, 0.18%)</title><rect x="1.8825%" y="276" width="0.1793%" height="15" fill="rgb(235,36,10)" fg:x="189" fg:w="18"/><text x="2.1325%" y="286.50"></text></g><g><title>with_updated_frame_function (moviepy/video/VideoClip.py:924) (18 samples, 0.18%)</title><rect x="1.8825%" y="292" width="0.1793%" height="15" fill="rgb(251,123,47)" fg:x="189" fg:w="18"/><text x="2.1325%" y="302.50"></text></g><g><title>fun (decorator.py:232) (18 samples, 0.18%)</title><rect x="1.8825%" y="308" width="0.1793%" height="15" fill="rgb(221,13,13)" fg:x="189" fg:w="18"/><text x="2.1325%" y="318.50"></text></g><g><title>wrapper (moviepy/decorators.py:102) (18 samples, 0.18%)</title><rect x="1.8825%" y="324" width="0.1793%" height="15" fill="rgb(238,131,9)" fg:x="189" fg:w="18"/><text x="2.1325%" y="334.50"></text></g><g><title>get_frame (moviepy/Clip.py:87) (18 samples, 0.18%)</title><rect x="1.8825%" y="340" width="0.1793%" height="15" fill="rgb(211,50,8)" fg:x="189" fg:w="18"/><text x="2.1325%" y="350.50"></text></g><g><title>new_get_frame (renderer.py:197) (18 samples, 0.18%)</title><rect x="1.8825%" y="356" width="0.1793%" height="15" fill="rgb(245,182,24)" fg:x="189" fg:w="18"/><text x="2.1325%" y="366.50"></text></g><g><title>to_soundarray (moviepy/audio/AudioClip.py:160) (20 samples, 0.20%)</title><rect x="2.1514%" y="564" width="0.1992%" height="15" fill="rgb(242,14,37)" fg:x="216" fg:w="20"/><text x="2.4014%" y="574.50"></text></g><g><title>fun (decorator.py:232) (20 samples, 0.20%)</title><rect x="2.1514%" y="580" width="0.1992%" height="15" fill="rgb(246,228,12)" fg:x="216" fg:w="20"/><text x="2.4014%" y="590.50"></text></g><g><title>wrapper (moviepy/decorators.py:102) (20 samples, 0.20%)</title><rect x="2.1514%" y="596" width="0.1992%" height="15" fill="rgb(213,55,15)" fg:x="216" fg:w="20"/><text x="2.4014%" y="606.50"></text></g><g><title>get_frame (moviepy/Clip.py:87) (20 samples, 0.20%)</title><rect x="2.1514%" y="612" width="0.1992%" height="15" fill="rgb(209,9,3)" fg:x="216" fg:w="20"/><text x="2.4014%" y="622.50"></text></g><g><title>&lt;lambda&gt; (moviepy/audio/io/AudioFileClip.py:78) (20 samples, 0.20%)</title><rect x="2.1514%" y="628" width="0.1992%" height="15" fill="rgb(230,59,30)" fg:x="216" fg:w="20"/><text x="2.4014%" y="638.50"></text></g><g><title>ffmpeg_audiowrite (moviepy/audio/io/ffmpeg_audiowriter.py:220) (28 samples, 0.28%)</title><rect x="2.0916%" y="500" width="0.2789%" height="15" fill="rgb(209,121,21)" fg:x="210" fg:w="28"/><text x="2.3416%" y="510.50"></text></g><g><title>iter_chunks (moviepy/audio/AudioClip.py:112) (22 samples, 0.22%)</title><rect x="2.1514%" y="516" width="0.2191%" height="15" fill="rgb(220,109,13)" fg:x="216" fg:w="22"/><text x="2.4014%" y="526.50"></text></g><g><title>fun (decorator.py:232) (22 samples, 0.22%)</title><rect x="2.1514%" y="532" width="0.2191%" height="15" fill="rgb(232,18,1)" fg:x="216" fg:w="22"/><text x="2.4014%" y="542.50"></text></g><g><title>requires_duration (moviepy/decorators.py:53) (22 samples, 0.22%)</title><rect x="2.1514%" y="548" width="0.2191%" height="15" fill="rgb(215,41,42)" fg:x="216" fg:w="22"/><text x="2.4014%" y="558.50"></text></g><g><title>write_videofile (moviepy/video/VideoClip.py:379) (34 samples, 0.34%)</title><rect x="2.0717%" y="372" width="0.3386%" height="15" fill="rgb(224,123,36)" fg:x="208" fg:w="34"/><text x="2.3217%" y="382.50"></text></g><g><title>fun (decorator.py:232) (34 samples, 0.34%)</title><rect x="2.0717%" y="388" width="0.3386%" height="15" fill="rgb(240,125,3)" fg:x="208" fg:w="34"/><text x="2.3217%" y="398.50"></text></g><g><title>requires_duration (moviepy/decorators.py:53) (34 samples, 0.34%)</title><rect x="2.0717%" y="404" width="0.3386%" height="15" fill="rgb(205,98,50)" fg:x="208" fg:w="34"/><text x="2.3217%" y="414.50"></text></g><g><title>fun (decorator.py:232) (34 samples, 0.34%)</title><rect x="2.0717%" y="420" width="0.3386%" height="15" fill="rgb(205,185,37)" fg:x="208" fg:w="34"/><text x="2.3217%" y="430.50"></text></g><g><title>wrapper (moviepy/decorators.py:102) (34 samples, 0.34%)</title><rect x="2.0717%" y="436" width="0.3386%" height="15" fill="rgb(238,207,15)" fg:x="208" fg:w="34"/><text x="2.3217%" y="446.50"></text></g><g><title>write_audiofile (moviepy/audio/AudioClip.py:258) (34 samples, 0.34%)</title><rect x="2.0717%" y="452" width="0.3386%" height="15" fill="rgb(213,199,42)" fg:x="208" fg:w="34"/><text x="2.3217%" y="462.50"></text></g><g><title>fun (decorator.py:232) (34 samples, 0.34%)</title><rect x="2.0717%" y="468" width="0.3386%" height="15" fill="rgb(235,201,11)" fg:x="208" fg:w="34"/><text x="2.3217%" y="478.50"></text></g><g><title>requires_duration (moviepy/decorators.py:53) (34 samples, 0.34%)</title><rect x="2.0717%" y="484" width="0.3386%" height="15" fill="rgb(207,46,11)" fg:x="208" fg:w="34"/><text x="2.3217%" y="494.50"></text></g><g><title>refresh (tqdm/std.py:1344) (16 samples, 0.16%)</title><rect x="3.2968%" y="484" width="0.1594%" height="15" fill="rgb(241,35,35)" fg:x="331" fg:w="16"/><text x="3.5468%" y="494.50"></text></g><g><title>display (tqdm/std.py:1492) (14 samples, 0.14%)</title><rect x="3.3167%" y="500" width="0.1394%" height="15" fill="rgb(243,32,47)" fg:x="333" fg:w="14"/><text x="3.5667%" y="510.50"></text></g><g><title>iter_frames (moviepy/Clip.py:554) (36 samples, 0.36%)</title><rect x="3.1076%" y="404" width="0.3586%" height="15" fill="rgb(247,202,23)" fg:x="312" fg:w="36"/><text x="3.3576%" y="414.50"></text></g><g><title>new_iterable (proglog/proglog.py:209) (29 samples, 0.29%)</title><rect x="3.1773%" y="420" width="0.2888%" height="15" fill="rgb(219,102,11)" fg:x="319" fg:w="29"/><text x="3.4273%" y="430.50"></text></g><g><title>__call__ (proglog/proglog.py:263) (20 samples, 0.20%)</title><rect x="3.2669%" y="436" width="0.1992%" height="15" fill="rgb(243,110,44)" fg:x="328" fg:w="20"/><text x="3.5169%" y="446.50"></text></g><g><title>bars_callback (proglog/proglog.py:354) (20 samples, 0.20%)</title><rect x="3.2669%" y="452" width="0.1992%" height="15" fill="rgb(222,74,54)" fg:x="328" fg:w="20"/><text x="3.5169%" y="462.50"></text></g><g><title>update (tqdm/std.py:1239) (19 samples, 0.19%)</title><rect x="3.2769%" y="468" width="0.1892%" height="15" fill="rgb(216,99,12)" fg:x="329" fg:w="19"/><text x="3.5269%" y="478.50"></text></g><g><title>read_frame (moviepy/video/io/ffmpeg_reader.py:187) (2,246 samples, 22.37%)</title><rect x="3.5657%" y="564" width="22.3705%" height="15" fill="rgb(226,22,26)" fg:x="358" fg:w="2246"/><text x="3.8157%" y="574.50">read_frame (moviepy/video/io/ffmpeg..</text></g><g><title>new_get_frame (renderer.py:196) (2,297 samples, 22.88%)</title><rect x="3.5558%" y="468" width="22.8785%" height="15" fill="rgb(217,163,10)" fg:x="357" fg:w="2297"/><text x="3.8058%" y="478.50">new_get_frame (renderer.py:196)</text></g><g><title>fun (decorator.py:232) (2,297 samples, 22.88%)</title><rect x="3.5558%" y="484" width="22.8785%" height="15" fill="rgb(213,25,53)" fg:x="357" fg:w="2297"/><text x="3.8058%" y="494.50">fun (decorator.py:232)</text></g><g><title>wrapper (moviepy/decorators.py:102) (2,297 samples, 22.88%)</title><rect x="3.5558%" y="500" width="22.8785%" height="15" fill="rgb(252,105,26)" fg:x="357" fg:w="2297"/><text x="3.8058%" y="510.50">wrapper (moviepy/decorators.py:102)</text></g><g><title>get_frame (moviepy/Clip.py:87) (2,297 samples, 22.88%)</title><rect x="3.5558%" y="516" width="22.8785%" height="15" fill="rgb(220,39,43)" fg:x="357" fg:w="2297"/><text x="3.8058%" y="526.50">get_frame (moviepy/Clip.py:87)</text></g><g><title>&lt;lambda&gt; (moviepy/video/io/VideoFileClip.py:140) (2,297 samples, 22.88%)</title><rect x="3.5558%" y="532" width="22.8785%" height="15" fill="rgb(229,68,48)" fg:x="357" fg:w="2297"/><text x="3.8058%" y="542.50">&lt;lambda&gt; (moviepy/video/io/VideoFile..</text></g><g><title>get_frame (moviepy/video/io/ffmpeg_reader.py:261) (2,296 samples, 22.87%)</title><rect x="3.5657%" y="548" width="22.8685%" height="15" fill="rgb(252,8,32)" fg:x="358" fg:w="2296"/><text x="3.8157%" y="558.50">get_frame (moviepy/video/io/ffmpeg_r..</text></g><g><title>read_frame (moviepy/video/io/ffmpeg_reader.py:227) (44 samples, 0.44%)</title><rect x="25.9960%" y="564" width="0.4382%" height="15" fill="rgb(223,20,43)" fg:x="2610" fg:w="44"/><text x="26.2460%" y="574.50"></text></g><g><title>frombytes (PIL/Image.py:3152) (443 samples, 4.41%)</title><rect x="27.1614%" y="532" width="4.4124%" height="15" fill="rgb(229,81,49)" fg:x="2727" fg:w="443"/><text x="27.4114%" y="542.50">fromb..</text></g><g><title>new (PIL/Image.py:3117) (442 samples, 4.40%)</title><rect x="27.1713%" y="548" width="4.4024%" height="15" fill="rgb(236,28,36)" fg:x="2728" fg:w="442"/><text x="27.4213%" y="558.50">new (..</text></g><g><title>_frame_with_overlay (renderer.py:182) (1,289 samples, 12.84%)</title><rect x="27.0717%" y="484" width="12.8386%" height="15" fill="rgb(249,185,26)" fg:x="2718" fg:w="1289"/><text x="27.3217%" y="494.50">_frame_with_overlay..</text></g><g><title>fromarray (PIL/Image.py:3336) (1,280 samples, 12.75%)</title><rect x="27.1614%" y="500" width="12.7490%" height="15" fill="rgb(249,174,33)" fg:x="2727" fg:w="1280"/><text x="27.4114%" y="510.50">fromarray (PIL/Imag..</text></g><g><title>frombuffer (PIL/Image.py:3225) (1,280 samples, 12.75%)</title><rect x="27.1614%" y="516" width="12.7490%" height="15" fill="rgb(233,201,37)" fg:x="2727" fg:w="1280"/><text x="27.4114%" y="526.50">frombuffer (PIL/Ima..</text></g><g><title>frombytes (PIL/Image.py:3162) (835 samples, 8.32%)</title><rect x="31.5936%" y="532" width="8.3167%" height="15" fill="rgb(221,78,26)" fg:x="3172" fg:w="835"/><text x="31.8436%" y="542.50">frombytes (P..</text></g><g><title>frombytes (PIL/Image.py:875) (824 samples, 8.21%)</title><rect x="31.7032%" y="548" width="8.2072%" height="15" fill="rgb(250,127,30)" fg:x="3183" fg:w="824"/><text x="31.9532%" y="558.50">frombytes (..</text></g><g><title>render (gauge.py:332) (31 samples, 0.31%)</title><rect x="41.0657%" y="516" width="0.3088%" height="15" fill="rgb(230,49,44)" fg:x="4123" fg:w="31"/><text x="41.3157%" y="526.50"></text></g><g><title>new (PIL/Image.py:3117) (29 samples, 0.29%)</title><rect x="41.0857%" y="532" width="0.2888%" height="15" fill="rgb(229,67,23)" fg:x="4125" fg:w="29"/><text x="41.3357%" y="542.50"></text></g><g><title>render (gauge.py:351) (12 samples, 0.12%)</title><rect x="41.4044%" y="516" width="0.1195%" height="15" fill="rgb(249,83,47)" fg:x="4157" fg:w="12"/><text x="41.6544%" y="526.50"></text></g><g><title>arc (PIL/ImageDraw.py:181) (12 samples, 0.12%)</title><rect x="41.4044%" y="532" width="0.1195%" height="15" fill="rgb(215,43,3)" fg:x="4157" fg:w="12"/><text x="41.6544%" y="542.50"></text></g><g><title>render (gauge.py:361) (13 samples, 0.13%)</title><rect x="41.5239%" y="516" width="0.1295%" height="15" fill="rgb(238,154,13)" fg:x="4169" fg:w="13"/><text x="41.7739%" y="526.50"></text></g><g><title>arc (PIL/ImageDraw.py:181) (13 samples, 0.13%)</title><rect x="41.5239%" y="532" width="0.1295%" height="15" fill="rgb(219,56,2)" fg:x="4169" fg:w="13"/><text x="41.7739%" y="542.50"></text></g><g><title>render (gauge.py:394) (13 samples, 0.13%)</title><rect x="41.6534%" y="516" width="0.1295%" height="15" fill="rgb(233,0,4)" fg:x="4182" fg:w="13"/><text x="41.9034%" y="526.50"></text></g><g><title>textbbox (PIL/ImageDraw.py:925) (13 samples, 0.13%)</title><rect x="41.6534%" y="532" width="0.1295%" height="15" fill="rgb(235,30,7)" fg:x="4182" fg:w="13"/><text x="41.9034%" y="542.50"></text></g><g><title>getbbox (PIL/ImageFont.py:451) (13 samples, 0.13%)</title><rect x="41.6534%" y="548" width="0.1295%" height="15" fill="rgb(250,79,13)" fg:x="4182" fg:w="13"/><text x="41.9034%" y="558.50"></text></g><g><title>draw_text (PIL/ImageDraw.py:609) (33 samples, 0.33%)</title><rect x="41.7829%" y="548" width="0.3287%" height="15" fill="rgb(211,146,34)" fg:x="4195" fg:w="33"/><text x="42.0329%" y="558.50"></text></g><g><title>getmask2 (PIL/ImageFont.py:640) (32 samples, 0.32%)</title><rect x="41.7928%" y="564" width="0.3187%" height="15" fill="rgb(228,22,38)" fg:x="4196" fg:w="32"/><text x="42.0428%" y="574.50"></text></g><g><title>render (gauge.py:397) (34 samples, 0.34%)</title><rect x="41.7829%" y="516" width="0.3386%" height="15" fill="rgb(235,168,5)" fg:x="4195" fg:w="34"/><text x="42.0329%" y="526.50"></text></g><g><title>text (PIL/ImageDraw.py:670) (34 samples, 0.34%)</title><rect x="41.7829%" y="532" width="0.3386%" height="15" fill="rgb(221,155,16)" fg:x="4195" fg:w="34"/><text x="42.0329%" y="542.50"></text></g><g><title>draw_text (PIL/ImageDraw.py:609) (43 samples, 0.43%)</title><rect x="42.1215%" y="548" width="0.4283%" height="15" fill="rgb(215,215,53)" fg:x="4229" fg:w="43"/><text x="42.3715%" y="558.50"></text></g><g><title>getmask2 (PIL/ImageFont.py:640) (43 samples, 0.43%)</title><rect x="42.1215%" y="564" width="0.4283%" height="15" fill="rgb(223,4,10)" fg:x="4229" fg:w="43"/><text x="42.3715%" y="574.50"></text></g><g><title>render (gauge.py:405) (50 samples, 0.50%)</title><rect x="42.1215%" y="516" width="0.4980%" height="15" fill="rgb(234,103,6)" fg:x="4229" fg:w="50"/><text x="42.3715%" y="526.50"></text></g><g><title>text (PIL/ImageDraw.py:670) (50 samples, 0.50%)</title><rect x="42.1215%" y="532" width="0.4980%" height="15" fill="rgb(227,97,0)" fg:x="4229" fg:w="50"/><text x="42.3715%" y="542.50"></text></g><g><title>alpha_composite (PIL/Image.py:1877) (74 samples, 0.74%)</title><rect x="42.7590%" y="532" width="0.7371%" height="15" fill="rgb(234,150,53)" fg:x="4293" fg:w="74"/><text x="43.0090%" y="542.50"></text></g><g><title>alpha_composite (PIL/Image.py:3599) (69 samples, 0.69%)</title><rect x="42.8088%" y="548" width="0.6873%" height="15" fill="rgb(228,201,54)" fg:x="4298" fg:w="69"/><text x="43.0588%" y="558.50"></text></g><g><title>render (gauge.py:411) (102 samples, 1.02%)</title><rect x="42.6195%" y="516" width="1.0159%" height="15" fill="rgb(222,22,37)" fg:x="4279" fg:w="102"/><text x="42.8695%" y="526.50"></text></g><g><title>alpha_composite (PIL/Image.py:1878) (14 samples, 0.14%)</title><rect x="43.4960%" y="532" width="0.1394%" height="15" fill="rgb(237,53,32)" fg:x="4367" fg:w="14"/><text x="43.7460%" y="542.50"></text></g><g><title>paste (PIL/Image.py:1822) (14 samples, 0.14%)</title><rect x="43.4960%" y="548" width="0.1394%" height="15" fill="rgb(233,25,53)" fg:x="4367" fg:w="14"/><text x="43.7460%" y="558.50"></text></g><g><title>render (gauge.py:414) (16 samples, 0.16%)</title><rect x="43.6355%" y="516" width="0.1594%" height="15" fill="rgb(210,40,34)" fg:x="4381" fg:w="16"/><text x="43.8855%" y="526.50"></text></g><g><title>render (gauge.py:561) (28 samples, 0.28%)</title><rect x="43.7948%" y="516" width="0.2789%" height="15" fill="rgb(241,220,44)" fg:x="4397" fg:w="28"/><text x="44.0448%" y="526.50"></text></g><g><title>new (PIL/Image.py:3117) (28 samples, 0.28%)</title><rect x="43.7948%" y="532" width="0.2789%" height="15" fill="rgb(235,28,35)" fg:x="4397" fg:w="28"/><text x="44.0448%" y="542.50"></text></g><g><title>alpha_composite (PIL/Image.py:1877) (107 samples, 1.07%)</title><rect x="44.2829%" y="532" width="1.0657%" height="15" fill="rgb(210,56,17)" fg:x="4446" fg:w="107"/><text x="44.5329%" y="542.50"></text></g><g><title>alpha_composite (PIL/Image.py:3599) (104 samples, 1.04%)</title><rect x="44.3127%" y="548" width="1.0359%" height="15" fill="rgb(224,130,29)" fg:x="4449" fg:w="104"/><text x="44.5627%" y="558.50"></text></g><g><title>render (gauge.py:564) (136 samples, 1.35%)</title><rect x="44.1733%" y="516" width="1.3546%" height="15" fill="rgb(235,212,8)" fg:x="4435" fg:w="136"/><text x="44.4233%" y="526.50"></text></g><g><title>alpha_composite (PIL/Image.py:1878) (18 samples, 0.18%)</title><rect x="45.3486%" y="532" width="0.1793%" height="15" fill="rgb(223,33,50)" fg:x="4553" fg:w="18"/><text x="45.5986%" y="542.50"></text></g><g><title>paste (PIL/Image.py:1822) (15 samples, 0.15%)</title><rect x="45.3785%" y="548" width="0.1494%" height="15" fill="rgb(219,149,13)" fg:x="4556" fg:w="15"/><text x="45.6285%" y="558.50"></text></g><g><title>render (gauge.py:600) (41 samples, 0.41%)</title><rect x="45.6474%" y="516" width="0.4084%" height="15" fill="rgb(250,156,29)" fg:x="4583" fg:w="41"/><text x="45.8974%" y="526.50"></text></g><g><title>textbbox (PIL/ImageDraw.py:925) (41 samples, 0.41%)</title><rect x="45.6474%" y="532" width="0.4084%" height="15" fill="rgb(216,193,19)" fg:x="4583" fg:w="41"/><text x="45.8974%" y="542.50"></text></g><g><title>getbbox (PIL/ImageFont.py:451) (41 samples, 0.41%)</title><rect x="45.6474%" y="548" width="0.4084%" height="15" fill="rgb(216,135,14)" fg:x="4583" fg:w="41"/><text x="45.8974%" y="558.50"></text></g><g><title>draw_text (PIL/ImageDraw.py:609) (68 samples, 0.68%)</title><rect x="46.0558%" y="548" width="0.6773%" height="15" fill="rgb(241,47,5)" fg:x="4624" fg:w="68"/><text x="46.3058%" y="558.50"></text></g><g><title>getmask2 (PIL/ImageFont.py:640) (68 samples, 0.68%)</title><rect x="46.0558%" y="564" width="0.6773%" height="15" fill="rgb(233,42,35)" fg:x="4624" fg:w="68"/><text x="46.3058%" y="574.50"></text></g><g><title>render (gauge.py:603) (81 samples, 0.81%)</title><rect x="46.0558%" y="516" width="0.8068%" height="15" fill="rgb(231,13,6)" fg:x="4624" fg:w="81"/><text x="46.3058%" y="526.50"></text></g><g><title>text (PIL/ImageDraw.py:670) (81 samples, 0.81%)</title><rect x="46.0558%" y="532" width="0.8068%" height="15" fill="rgb(207,181,40)" fg:x="4624" fg:w="81"/><text x="46.3058%" y="542.50"></text></g><g><title>draw_text (PIL/ImageDraw.py:653) (13 samples, 0.13%)</title><rect x="46.7331%" y="548" width="0.1295%" height="15" fill="rgb(254,173,49)" fg:x="4692" fg:w="13"/><text x="46.9831%" y="558.50"></text></g><g><title>render (track.py:112) (63 samples, 0.63%)</title><rect x="47.0219%" y="516" width="0.6275%" height="15" fill="rgb(221,1,38)" fg:x="4721" fg:w="63"/><text x="47.2719%" y="526.50"></text></g><g><title>copy (PIL/Image.py:1276) (60 samples, 0.60%)</title><rect x="47.0518%" y="532" width="0.5976%" height="15" fill="rgb(206,124,46)" fg:x="4724" fg:w="60"/><text x="47.3018%" y="542.50"></text></g><g><title>load_default (PIL/ImageFont.py:1109) (19 samples, 0.19%)</title><rect x="47.6992%" y="532" width="0.1892%" height="15" fill="rgb(249,21,11)" fg:x="4789" fg:w="19"/><text x="47.9492%" y="542.50"></text></g><g><title>truetype (PIL/ImageFont.py:880) (19 samples, 0.19%)</title><rect x="47.6992%" y="548" width="0.1892%" height="15" fill="rgb(222,201,40)" fg:x="4789" fg:w="19"/><text x="47.9492%" y="558.50"></text></g><g><title>freetype (PIL/ImageFont.py:877) (19 samples, 0.19%)</title><rect x="47.6992%" y="564" width="0.1892%" height="15" fill="rgb(235,61,29)" fg:x="4789" fg:w="19"/><text x="47.9492%" y="574.50"></text></g><g><title>__init__ (PIL/ImageFont.py:289) (12 samples, 0.12%)</title><rect x="47.7689%" y="580" width="0.1195%" height="15" fill="rgb(219,207,3)" fg:x="4796" fg:w="12"/><text x="48.0189%" y="590.50"></text></g><g><title>render (track.py:127) (32 samples, 0.32%)</title><rect x="47.6992%" y="516" width="0.3187%" height="15" fill="rgb(222,56,46)" fg:x="4789" fg:w="32"/><text x="47.9492%" y="526.50"></text></g><g><title>load_default (PIL/ImageFont.py:1111) (12 samples, 0.12%)</title><rect x="47.8984%" y="532" width="0.1195%" height="15" fill="rgb(239,76,54)" fg:x="4809" fg:w="12"/><text x="48.1484%" y="542.50"></text></g><g><title>b64decode (base64.py:87) (12 samples, 0.12%)</title><rect x="47.8984%" y="548" width="0.1195%" height="15" fill="rgb(231,124,27)" fg:x="4809" fg:w="12"/><text x="48.1484%" y="558.50"></text></g><g><title>getbbox (PIL/ImageFont.py:451) (35 samples, 0.35%)</title><rect x="48.0378%" y="548" width="0.3486%" height="15" fill="rgb(249,195,6)" fg:x="4823" fg:w="35"/><text x="48.2878%" y="558.50"></text></g><g><title>render (track.py:128) (39 samples, 0.39%)</title><rect x="48.0179%" y="516" width="0.3884%" height="15" fill="rgb(237,174,47)" fg:x="4821" fg:w="39"/><text x="48.2679%" y="526.50"></text></g><g><title>textbbox (PIL/ImageDraw.py:925) (37 samples, 0.37%)</title><rect x="48.0378%" y="532" width="0.3685%" height="15" fill="rgb(206,201,31)" fg:x="4823" fg:w="37"/><text x="48.2878%" y="542.50"></text></g><g><title>draw_onto (base.py:30) (751 samples, 7.48%)</title><rect x="41.0359%" y="500" width="7.4801%" height="15" fill="rgb(231,57,52)" fg:x="4120" fg:w="751"/><text x="41.2859%" y="510.50">draw_onto ..</text></g><g><title>render (track.py:131) (11 samples, 0.11%)</title><rect x="48.4064%" y="516" width="0.1096%" height="15" fill="rgb(248,177,22)" fg:x="4860" fg:w="11"/><text x="48.6564%" y="526.50"></text></g><g><title>text (PIL/ImageDraw.py:670) (11 samples, 0.11%)</title><rect x="48.4064%" y="532" width="0.1096%" height="15" fill="rgb(215,211,37)" fg:x="4860" fg:w="11"/><text x="48.6564%" y="542.50"></text></g><g><title>_frame_with_overlay (renderer.py:184) (1,180 samples, 11.75%)</title><rect x="39.9104%" y="484" width="11.7530%" height="15" fill="rgb(241,128,51)" fg:x="4007" fg:w="1180"/><text x="40.1604%" y="494.50">_frame_with_overl..</text></g><g><title>draw_onto (base.py:33) (315 samples, 3.14%)</title><rect x="48.5259%" y="500" width="3.1375%" height="15" fill="rgb(227,165,31)" fg:x="4872" fg:w="315"/><text x="48.7759%" y="510.50">dra..</text></g><g><title>paste (PIL/Image.py:1820) (313 samples, 3.12%)</title><rect x="48.5458%" y="516" width="3.1175%" height="15" fill="rgb(228,167,24)" fg:x="4874" fg:w="313"/><text x="48.7958%" y="526.50">pas..</text></g><g><title>tobytes (PIL/Image.py:811) (1,475 samples, 14.69%)</title><rect x="60.9960%" y="516" width="14.6912%" height="15" fill="rgb(228,143,12)" fg:x="6124" fg:w="1475"/><text x="61.2460%" y="526.50">tobytes (PIL/Image.py:..</text></g><g><title>tobytes (PIL/Image.py:812) (11 samples, 0.11%)</title><rect x="75.6873%" y="516" width="0.1096%" height="15" fill="rgb(249,149,8)" fg:x="7599" fg:w="11"/><text x="75.9373%" y="526.50"></text></g><g><title>__array_interface__ (PIL/Image.py:735) (2,606 samples, 25.96%)</title><rect x="56.5737%" y="500" width="25.9562%" height="15" fill="rgb(243,35,44)" fg:x="5680" fg:w="2606"/><text x="56.8237%" y="510.50">__array_interface__ (PIL/Image.py:735)</text></g><g><title>tobytes (PIL/Image.py:819) (676 samples, 6.73%)</title><rect x="75.7968%" y="516" width="6.7331%" height="15" fill="rgb(246,89,9)" fg:x="7610" fg:w="676"/><text x="76.0468%" y="526.50">tobytes (..</text></g><g><title>wrapper (moviepy/decorators.py:102) (7,937 samples, 79.05%)</title><rect x="3.5558%" y="436" width="79.0538%" height="15" fill="rgb(233,213,13)" fg:x="357" fg:w="7937"/><text x="3.8058%" y="446.50">wrapper (moviepy/decorators.py:102)</text></g><g><title>get_frame (moviepy/Clip.py:87) (7,937 samples, 79.05%)</title><rect x="3.5558%" y="452" width="79.0538%" height="15" fill="rgb(233,141,41)" fg:x="357" fg:w="7937"/><text x="3.8058%" y="462.50">get_frame (moviepy/Clip.py:87)</text></g><g><title>new_get_frame (renderer.py:197) (5,640 samples, 56.18%)</title><rect x="26.4343%" y="468" width="56.1753%" height="15" fill="rgb(239,167,4)" fg:x="2654" fg:w="5640"/><text x="26.6843%" y="478.50">new_get_frame (renderer.py:197)</text></g><g><title>_frame_with_overlay (renderer.py:185) (3,107 samples, 30.95%)</title><rect x="51.6633%" y="484" width="30.9462%" height="15" fill="rgb(209,217,16)" fg:x="5187" fg:w="3107"/><text x="51.9133%" y="494.50">_frame_with_overlay (renderer.py:185)</text></g><g><title>iter_frames (moviepy/Clip.py:561) (7,942 samples, 79.10%)</title><rect x="3.5159%" y="404" width="79.1036%" height="15" fill="rgb(219,88,35)" fg:x="353" fg:w="7942"/><text x="3.7659%" y="414.50">iter_frames (moviepy/Clip.py:561)</text></g><g><title>fun (decorator.py:232) (7,938 samples, 79.06%)</title><rect x="3.5558%" y="420" width="79.0637%" height="15" fill="rgb(220,193,23)" fg:x="357" fg:w="7938"/><text x="3.8058%" y="430.50">fun (decorator.py:232)</text></g><g><title>ffmpeg_write_video (moviepy/video/io/ffmpeg_writer.py:286) (8,052 samples, 80.20%)</title><rect x="2.4303%" y="388" width="80.1992%" height="15" fill="rgb(230,90,52)" fg:x="244" fg:w="8052"/><text x="2.6803%" y="398.50">ffmpeg_write_video (moviepy/video/io/ffmpeg_writer.py:286)</text></g><g><title>render (goproverlay/cli.py:159) (9,859 samples, 98.20%)</title><rect x="1.6633%" y="212" width="98.1972%" height="15" fill="rgb(252,106,19)" fg:x="167" fg:w="9859"/><text x="1.9133%" y="222.50">render (goproverlay/cli.py:159)</text></g><g><title>render_to (renderer.py:205) (9,819 samples, 97.80%)</title><rect x="2.0618%" y="228" width="97.7988%" height="15" fill="rgb(206,74,20)" fg:x="207" fg:w="9819"/><text x="2.3118%" y="238.50">render_to (renderer.py:205)</text></g><g><title>fun (decorator.py:232) (9,819 samples, 97.80%)</title><rect x="2.0618%" y="244" width="97.7988%" height="15" fill="rgb(230,138,44)" fg:x="207" fg:w="9819"/><text x="2.3118%" y="254.50">fun (decorator.py:232)</text></g><g><title>requires_duration (moviepy/decorators.py:53) (9,819 samples, 97.80%)</title><rect x="2.0618%" y="260" width="97.7988%" height="15" fill="rgb(235,182,43)" fg:x="207" fg:w="9819"/><text x="2.3118%" y="270.50">requires_duration (moviepy/decorators.py:53)</text></g><g><title>fun (decorator.py:232) (9,819 samples, 97.80%)</title><rect x="2.0618%" y="276" width="97.7988%" height="15" fill="rgb(242,16,51)" fg:x="207" fg:w="9819"/><text x="2.3118%" y="286.50">fun (decorator.py:232)</text></g><g><title>wrapper (moviepy/decorators.py:153) (9,819 samples, 97.80%)</title><rect x="2.0618%" y="292" width="97.7988%" height="15" fill="rgb(248,9,4)" fg:x="207" fg:w="9819"/><text x="2.3118%" y="302.50">wrapper (moviepy/decorators.py:153)</text></g><g><title>fun (decorator.py:232) (9,819 samples, 97.80%)</title><rect x="2.0618%" y="308" width="97.7988%" height="15" fill="rgb(210,31,22)" fg:x="207" fg:w="9819"/><text x="2.3118%" y="318.50">fun (decorator.py:232)</text></g><g><title>convert_masks_to_RGB (moviepy/decorators.py:24) (9,819 samples, 97.80%)</title><rect x="2.0618%" y="324" width="97.7988%" height="15" fill="rgb(239,54,39)" fg:x="207" fg:w="9819"/><text x="2.3118%" y="334.50">convert_masks_to_RGB (moviepy/decorators.py:24)</text></g><g><title>fun (decorator.py:232) (9,819 samples, 97.80%)</title><rect x="2.0618%" y="340" width="97.7988%" height="15" fill="rgb(230,99,41)" fg:x="207" fg:w="9819"/><text x="2.3118%" y="350.50">fun (decorator.py:232)</text></g><g><title>wrapper (moviepy/decorators.py:102) (9,819 samples, 97.80%)</title><rect x="2.0618%" y="356" width="97.7988%" height="15" fill="rgb(253,106,12)" fg:x="207" fg:w="9819"/><text x="2.3118%" y="366.50">wrapper (moviepy/decorators.py:102)</text></g><g><title>write_videofile (moviepy/video/VideoClip.py:393) (9,784 samples, 97.45%)</title><rect x="2.4104%" y="372" width="97.4502%" height="15" fill="rgb(213,46,41)" fg:x="242" fg:w="9784"/><text x="2.6604%" y="382.50">write_videofile (moviepy/video/VideoClip.py:393)</text></g><g><title>ffmpeg_write_video (moviepy/video/io/ffmpeg_writer.py:295) (1,728 samples, 17.21%)</title><rect x="82.6494%" y="388" width="17.2112%" height="15" fill="rgb(215,133,35)" fg:x="8298" fg:w="1728"/><text x="82.8994%" y="398.50">ffmpeg_write_video (moviepy..</text></g><g><title>write_frame (moviepy/video/io/ffmpeg_writer.py:169) (1,728 samples, 17.21%)</title><rect x="82.6494%" y="404" width="17.2112%" height="15" fill="rgb(213,28,5)" fg:x="8298" fg:w="1728"/><text x="82.8994%" y="414.50">write_frame (moviepy/video/..</text></g><g><title>__call__ (click/core.py:1130) (9,943 samples, 99.03%)</title><rect x="0.8865%" y="116" width="99.0339%" height="15" fill="rgb(215,77,49)" fg:x="89" fg:w="9943"/><text x="1.1365%" y="126.50">__call__ (click/core.py:1130)</text></g><g><title>main (typer/core.py:700) (9,943 samples, 99.03%)</title><rect x="0.8865%" y="132" width="99.0339%" height="15" fill="rgb(248,100,22)" fg:x="89" fg:w="9943"/><text x="1.1365%" y="142.50">main (typer/core.py:700)</text></g><g><title>_main (typer/core.py:193) (9,943 samples, 99.03%)</title><rect x="0.8865%" y="148" width="99.0339%" height="15" fill="rgb(208,67,9)" fg:x="89" fg:w="9943"/><text x="1.1365%" y="158.50">_main (typer/core.py:193)</text></g><g><title>invoke (click/core.py:1404) (9,943 samples, 99.03%)</title><rect x="0.8865%" y="164" width="99.0339%" height="15" fill="rgb(219,133,21)" fg:x="89" fg:w="9943"/><text x="1.1365%" y="174.50">invoke (click/core.py:1404)</text></g><g><title>invoke (click/core.py:759) (9,943 samples, 99.03%)</title><rect x="0.8865%" y="180" width="99.0339%" height="15" fill="rgb(246,46,29)" fg:x="89" fg:w="9943"/><text x="1.1365%" y="190.50">invoke (click/core.py:759)</text></g><g><title>wrapper (typer/main.py:690) (9,943 samples, 99.03%)</title><rect x="0.8865%" y="196" width="99.0339%" height="15" fill="rgb(246,185,52)" fg:x="89" fg:w="9943"/><text x="1.1365%" y="206.50">wrapper (typer/main.py:690)</text></g><g><title>&lt;module&gt; (goproverlay:8) (9,945 samples, 99.05%)</title><rect x="0.8865%" y="68" width="99.0538%" height="15" fill="rgb(252,136,11)" fg:x="89" fg:w="9945"/><text x="1.1365%" y="78.50">&lt;module&gt; (goproverlay:8)</text></g><g><title>main (goproverlay/cli.py:163) (9,945 samples, 99.05%)</title><rect x="0.8865%" y="84" width="99.0538%" height="15" fill="rgb(219,138,53)" fg:x="89" fg:w="9945"/><text x="1.1365%" y="94.50">main (goproverlay/cli.py:163)</text></g><g><title>__call__ (typer/main.py:313) (9,945 samples, 99.05%)</title><rect x="0.8865%" y="100" width="99.0538%" height="15" fill="rgb(211,51,23)" fg:x="89" fg:w="9945"/><text x="1.1365%" y="110.50">__call__ (typer/main.py:313)</text></g><g><title>all (10,040 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(247,221,28)" fg:x="0" fg:w="10040"/><text x="0.2500%" y="62.50"></text></g></svg></svg>